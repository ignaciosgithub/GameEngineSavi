CXX = g++
CXXFLAGS = -std=c++11 -Wall -Wextra -I. -IThirdParty
LDFLAGS = -lopengl32 -lglu32

# Source files for the engine
ENGINE_SOURCES = Camera.cpp \
                Face.cpp \
                GameObject.cpp \
                Matrix4x4.cpp \
                Model.cpp \
                MonoBehaviourLike.cpp \
                PointLight.cpp \
                Prefab.cpp \
                Pyramid.cpp \
                Raycast.cpp \
                Scene.cpp \
                Time.cpp \
                Triangle.cpp \
                Vector3.cpp

# Source files for the physics system
PHYSICS_SOURCES = CollisionSystem.cpp \
                 PhysicsSystem.cpp \
                 RigidBody.cpp

# Source files for the super simple Windows demo
SUPER_SIMPLE_SOURCES = SuperSimplePhysicsDemo_Windows.cpp \
                       Vector3.cpp

# Source files for the Windows physics demo
WINDOWS_PHYSICS_DEMO_SOURCES = PhysicsDemo.cpp \
                              Vector3.cpp \
                              CollisionSystem.cpp \
                              PhysicsSystem.cpp \
                              RigidBody.cpp

# Source files for the GUI system
GUI_SOURCES = GUI/GUI.cpp \
             GUI/SettingsPanel.cpp

# Source files for the project management system
PROJECT_SOURCES = ProjectSettings/ProjectSettings.cpp \
                 ProjectSettings/ProjectManager.cpp

# Source files for the debugger system
DEBUGGER_SOURCES = Debugger.cpp

# Source files for the main engine demo
MAIN_ENGINE_SOURCES = main35engine.cpp \
                     $(ENGINE_SOURCES)

# Object files
ENGINE_OBJECTS = $(ENGINE_SOURCES:.cpp=.o)
PHYSICS_OBJECTS = $(PHYSICS_SOURCES:.cpp=.o)
SUPER_SIMPLE_OBJECTS = $(SUPER_SIMPLE_SOURCES:.cpp=.o)
WINDOWS_PHYSICS_DEMO_OBJECTS = $(WINDOWS_PHYSICS_DEMO_SOURCES:.cpp=.o)
GUI_OBJECTS = $(GUI_SOURCES:.cpp=.o)
PROJECT_OBJECTS = $(PROJECT_SOURCES:.cpp=.o)
DEBUGGER_OBJECTS = $(DEBUGGER_SOURCES:.cpp=.o)
MAIN_ENGINE_OBJECTS = $(MAIN_ENGINE_SOURCES:.cpp=.o) $(GUI_OBJECTS) $(PROJECT_OBJECTS) $(DEBUGGER_OBJECTS)

# Executables
SUPER_SIMPLE_TARGET = bin/windows/SuperSimplePhysicsDemo.exe
WINDOWS_PHYSICS_DEMO_TARGET = bin/windows/PhysicsDemo.exe
MAIN_ENGINE_TARGET = bin/windows/MainEngine.exe
PROJECT_DEMO_TARGET = bin/windows/ProjectDemo.exe

# Default target
all: directories $(SUPER_SIMPLE_TARGET) $(WINDOWS_PHYSICS_DEMO_TARGET)

# Create necessary directories
directories:
	mkdir -p bin/windows

# Build the super simple physics demo
$(SUPER_SIMPLE_TARGET): $(SUPER_SIMPLE_OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

# Build the Windows physics demo
$(WINDOWS_PHYSICS_DEMO_TARGET): $(WINDOWS_PHYSICS_DEMO_OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

# Build the main engine demo
$(MAIN_ENGINE_TARGET): $(MAIN_ENGINE_OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

# Build the project demo
$(PROJECT_DEMO_TARGET): ProjectSettings/ProjectDemo.cpp $(PROJECT_OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

# Build the engine library
libengine.a: $(ENGINE_OBJECTS) $(PHYSICS_OBJECTS) $(GUI_OBJECTS) $(PROJECT_OBJECTS)
	ar rcs $@ $^

# Generic rule for object files
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean up
clean:
	rm -f $(ENGINE_OBJECTS) $(PHYSICS_OBJECTS) $(SUPER_SIMPLE_OBJECTS) $(WINDOWS_PHYSICS_DEMO_OBJECTS) $(GUI_OBJECTS) $(PROJECT_OBJECTS) $(MAIN_ENGINE_OBJECTS)
	rm -f $(SUPER_SIMPLE_TARGET) $(WINDOWS_PHYSICS_DEMO_TARGET) $(MAIN_ENGINE_TARGET) $(PROJECT_DEMO_TARGET) libengine.a

# Help target
help:
	@echo "Available targets:"
	@echo "  all                  - Build the super simple physics demo and Windows physics demo"
	@echo "  $(SUPER_SIMPLE_TARGET)   - Build the super simple physics demo"
	@echo "  $(WINDOWS_PHYSICS_DEMO_TARGET)   - Build the Windows physics demo"
	@echo "  $(MAIN_ENGINE_TARGET)   - Build the main engine demo"
	@echo "  $(PROJECT_DEMO_TARGET)   - Build the project management demo"
	@echo "  libengine.a         - Build the engine as a static library"
	@echo "  clean               - Remove all built files"
	@echo "  help                - Show this help message"

.PHONY: all directories clean help
