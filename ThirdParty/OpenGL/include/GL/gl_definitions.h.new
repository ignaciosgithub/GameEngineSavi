#ifndef GAME_ENGINE_SAVI_GL_DEFINITIONS_H
#define GAME_ENGINE_SAVI_GL_DEFINITIONS_H

// Include standard headers
#include <cstdint>
#include "../../../../platform.h"
#include "../../../../Debugger.h"
#include <iostream>

// Only include OpenGL headers for non-Windows platforms
#ifndef PLATFORM_WINDOWS

// Define GLEW_STATIC before including glew.h
#ifndef GLEW_STATIC
#define GLEW_STATIC
#endif

// Define missing types if needed
#ifndef __gl_glext_h_
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
typedef struct __GLsync* GLsync;
#endif

// Define APIENTRY if not already defined
#ifndef APIENTRY
#ifdef _WIN32
#define APIENTRY __stdcall
#else
#define APIENTRY
#endif
#endif

// Include GLEW first
#include <GL/glew.h>

// Then include other OpenGL headers
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>

// Define missing function pointer types with ARB/EXT suffixes
#ifndef PFNGLCLIENTACTIVETEXTUREARBPROC
typedef void (APIENTRY * PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif

#ifndef PFNGLLOADTRANSPOSEMATRIXDARBPROC
typedef void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble m[16]);
#endif

#ifndef PFNGLLOADTRANSPOSEMATRIXFARBPROC
typedef void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat m[16]);
#endif

#ifndef PFNGLMULTTRANSPOSEMATRIXDARBPROC
typedef void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble m[16]);
#endif

#ifndef PFNGLMULTTRANSPOSEMATRIXFARBPROC
typedef void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat m[16]);
#endif

#ifndef PFNGLHISTOGRAMEXTPROC
typedef void (APIENTRY * PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
#endif

#ifndef PFNGLMINMAXEXTPROC
typedef void (APIENTRY * PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);
#endif

#ifndef PFNGLRESETHISTOGRAMEXTPROC
typedef void (APIENTRY * PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);
#endif

#ifndef PFNGLRESETMINMAXEXTPROC
typedef void (APIENTRY * PFNGLRESETMINMAXEXTPROC) (GLenum target);
#endif

#ifndef PFNGLSEPARABLEFILTER2DEXTPROC
typedef void (APIENTRY * PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
#endif

#ifndef PFNGLGETMINMAXEXTPROC
typedef void (APIENTRY * PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif

#ifndef PFNGLGETHISTOGRAMEXTPROC
typedef void (APIENTRY * PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif

#ifndef PFNGLCOLORTABLEEXTPROC
typedef void (APIENTRY * PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
#endif

#else
// Windows-specific DirectX headers are included in DirectXGraphicsAPI.h
#endif

// Helper function to log OpenGL header inclusion status
inline void LogOpenGLHeaderStatus() {
    std::cout << "OpenGL headers included successfully" << std::endl;
    std::cout << "- GLEW header included" << std::endl;
    std::cout << "- GL header included" << std::endl;
    std::cout << "- GLU header included" << std::endl;
    std::cout << "- GLUT header included" << std::endl;
    std::cout << "- All required function pointer types defined" << std::endl;
}

#endif // GAME_ENGINE_SAVI_GL_DEFINITIONS_H
